services:
  api:
    container_name: listene_api_demo
    build:
      context: ./Server
      dockerfile: Dockerfile.api
    environment:
      - MYSQL_CONNECTION_STRING=Server=listene_db_demo;Port=[db_post];Database=[db_name];Uid=[db_username];Pwd=[db_password]
      - ADMIN_EMAIL=[admin_email]
      - ADMIN_PASSWORD=[admin_password]
      - ASPNETCORE_ENVIRONMENT=Demo
      - LISTENE_CLOUDINARY_NAME=[cloudinary_name]
      - LISTENE_CLOUDINARY_API_KEY=[cloudinary_key]
      - LISTENE_CLOUDINARY_API_SECRET=[cloudinary_secret]
      - SYSTEM_EMAIL=[mailbot_email]
      - SYSTEM_EMAIL_APP_PASSWORD=[mailbot_password]
      - GoogleClientId=[google_client_id]
      - GoogleClientSecret=[google_client_secret]
    ports:
      - "[api_run_port]:80"
    networks:
      - app-network_demo
    depends_on:
      - db
      - redis
    volumes:
      - api-resources_demo:/App/Resources
      - api-logs_demo:/App/Logs
    restart: always

  redis:
    container_name: listene_redis_demo
    image: redis:latest
    networks:
      - app-network_demo
    volumes:
      - redis-data_demo:/data
    restart: unless-stopped

  db:
    container_name: listene_db_demo
    build:
      context: ./Server
      dockerfile: Dockerfile.mysql
    environment:
      - MYSQL_ROOT_PASSWORD=[db_post]
      - MYSQL_DATABASE=[db_name]
    ports:
      - "[db_post]:3306"
    volumes:
      - listene_db_demo:/var/lib/mysql
    networks:
      - app-network_demo
    restart: always

volumes:
  listene_db_demo:
  redis-data_demo:
  api-resources_demo:
  api-logs_demo:

networks:
  app-network_demo:
    external: false


